---
import { getCollection, type CollectionEntry } from 'astro:content';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import Layout from '../../layouts/Layout.astro';
import { sortDate } from '../../helpers/helper';
import GlossaryTitleList from '../../components/GlossaryTitleList.astro';
import YtShort from '../../components/YtShort.astro';

const subTitle = SITE_TITLE + ' | glossary';
const subDescription = `${SITE_DESCRIPTION} | glossary`;

export async function getStaticPaths() {
  const glossaries = await getCollection('glossary');
  return glossaries.map((glossary) => ({
    params: { slug: glossary.slug },
    props: glossary,
  }));
}
type Props = CollectionEntry<'glossary'>;

const glossary = Astro.props;
const { Content } = await glossary.render();

const glossaries = (await getCollection('glossary')).sort(sortDate);
---

<Layout title={subTitle} description={subDescription}>
  <main class='main'>
    <div class='aside-left'>
      <GlossaryTitleList glossaries={glossaries} />
    </div>
    <section class='section'>
      <Content />
    </section>
    <aside class='aside-right'>
      <h4>How to Sign</h4>
      { 
        glossary.data.ytShortEmbeddedLink &&
          <YtShort link={glossary.data.ytShortEmbeddedLink} />
      }
    </aside>
  </main>
</Layout>

<style>
  .main {
    display: flex;
    gap: 40px;
  }

  .aside-right {
    width: 220px;
  }

  .section {
    width: 700px;
  }

  @media (max-width: 720px) {
    .main {
      flex-direction: column;
    }
  }
</style>
