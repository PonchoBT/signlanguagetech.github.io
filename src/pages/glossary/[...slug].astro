---
import { getCollection, type CollectionEntry } from 'astro:content';

import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import Layout from '../../layouts/Layout.astro';
import { sortDate } from '../../helpers/helper';
import GlossaryMain from '../../layouts/GlossaryMain.astro';
import GlossaryContent from '../../layouts/GlossaryContent.astro';

type Props = CollectionEntry<'glossary'>;

const subTitle = SITE_TITLE + ' | glossary';
const subDescription = `${SITE_DESCRIPTION} | glossary`;

export async function getStaticPaths() {
  const glossaries = await getCollection('glossary');
  return glossaries.map((glossary) => ({
    params: { slug: glossary.slug },
    props: glossary,
  }));
}

const glossary = Astro.props;
const glossaries = (await getCollection('glossary')).sort(sortDate);
const { Content } = await glossary.render();
---

<Layout title={subTitle} description={subDescription}>
  <GlossaryMain
    glossaries={glossaries}
    link={glossary.data.ytShortEmbeddedLink}
    currentGlossaryTitle={glossary.data.title}
    currentSlug={glossary?.slug}
  >
    <GlossaryContent>
      <Content />
    </GlossaryContent>
  </GlossaryMain>
</Layout>
