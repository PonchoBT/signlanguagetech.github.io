---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

import type { Tag } from '../../../model/model';
import { SITE_DESCRIPTION, SITE_TITLE } from '../../../consts';
import Layout from '../../../layouts/Layout.astro';
import { countTags, getTotalTags } from '../../../helpers/video.helper';
import { sortDate } from '../../../helpers/helper';
import VideoMain from '../../../layouts/VideoMain.astro';

export async function getStaticPaths() {
  const videos = (await getCollection('video')).sort(sortDate);

  const tags: string[] = getTotalTags(videos);
  const tagCounts = countTags(tags);

  return tagCounts.map(({ tag }) => {
    return {
      params: { tag },
      props: {
        tag,
        tags: tagCounts,
        videos: videos.filter((video) =>
          video.data.tags?.map((t) => t.toLowerCase()).includes(tag)
        ),
      },
    };
  });
}

interface Props {
  tag: string;
  tags: Tag[];
  videos: CollectionEntry<'video'>[];
}

const { tag, tags, videos } = Astro.props;

const subTitle = `${SITE_TITLE} | videos | ${tag}`;
const subDescription = `${SITE_DESCRIPTION} | videos updated`;
---

<Layout title={subTitle} description={subDescription}>
  <VideoMain tags={tags} currentTag={tag} articles={videos} />
</Layout>
